<Project>

  <PropertyGroup Label="Compilation">
    <LangVersion>8.0</LangVersion>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
  </PropertyGroup>

  <PropertyGroup Label="Packaging">
    <DebugType>embedded</DebugType>
    <EmbedAllSources>true</EmbedAllSources>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <PropertyGroup Label="Publishing">
    <Authors>Cédric Luthi</Authors>
    <Copyright>Copyright © Cédric Luthi</Copyright>
    <Description>DbContext validation against an actual database</Description>
    <PackageIcon>icon.png</PackageIcon>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/0xced/DbContextValidation</PackageProjectUrl>
    <RepositoryUrl>https://github.com/0xced/DbContextValidation</RepositoryUrl>
  </PropertyGroup>

  <PropertyGroup Label="MinVer">
    <MinVerMinimumMajorMinor>0.9</MinVerMinimumMajorMinor>
  </PropertyGroup>

  <PropertyGroup Label="Restoring">
    <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>
    <!-- https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/#how-does-nuget-use-the-lock-file -->
    <RestoreLockedMode Condition="$(ContinuousIntegrationBuild) == 'true'">true</RestoreLockedMode>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\..\images\icon.png">
      <Pack>True</Pack>
      <PackagePath />
    </None>
  </ItemGroup>

  <ItemGroup>
    <Compile Include="..\*.cs" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.VisualStudio.Threading.Analyzers" Version="17.6.40" PrivateAssets="all" />
    <PackageReference Include="MinVer" Version="4.3.0" PrivateAssets="all" />
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="all" />
  </ItemGroup>

  <Target Name="ValidateNuGetPackage" AfterTargets="Pack">
    <Exec Command="dotnet tool restore" />
    <Exec Command="dotnet validate package local $([MSBuild]::EnsureTrailingSlash($(PackageOutputPath)))$(PackageId).$(PackageVersion).nupkg" />
  </Target>

</Project>
